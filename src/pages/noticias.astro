---
import Layout from "../layouts/Layout.astro";
import PostCard from "../components/PostCard.astro";
import { getPageInfo, getPostsByCategory } from "../lib/wp";

const { id: pageId } = await getPageInfo("inicio");

// ⚡ Traemos más de 20 posts para poder paginar (ej: 100)
const posts = await getPostsByCategory(9, { perPage: 100 });
const pageSize = 20;
const totalPages = Math.ceil(posts.length / pageSize);
---

<Layout>
  <main class="container mx-auto px-4 py-8">
    <section class="mt-8">
      <h2 class="text-3xl font-semibold text-gray-800 mb-8">NOTICIAS</h2>

      <!-- Contenedor con estado -->
      <div x-data="{ page: 1 }" class="space-y-8">
        <!-- Posts -->
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
          {
            posts.map((post: any, i: number) => (
              <div
                x-show={`page === ${Math.floor(i / pageSize) + 1}`}
                x-transition
              >
                <PostCard post={post} />
              </div>
            ))
          }
        </div>

        <!-- Controles de paginación -->
        <div class="flex justify-center gap-2 mt-6">
          {
            Array.from({ length: totalPages }).map((_, i) => (
              <button
                x-on:click={`page = ${i + 1}`}
                class="px-3 py-1 rounded-lg border"
                :class="{ 'bg-blue-600 text-white': page === (i+1), 'bg-gray-100': page !== (i+1) }"
              >
                {i + 1}
              </button>
            ))
          }
        </div>
      </div>
    </section>
  </main>
</Layout>

<!-- Importamos Alpine.js para manejar el estado en cliente -->
<script src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js" defer></script>
