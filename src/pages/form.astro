---
import Layout from "../layouts/Layout.astro";
import { getPageInfo } from "../lib/wp";
const pageData = await getPageInfo(248);
let pageId, title, content;
if (pageData) {
  ({ id: pageId, title, content } = pageData);
} else {
  console.error("Error: aaaaaaa 248.");
}
---

<head>
  <meta charset="UTF-8" />
  <link rel="stylesheet" href="https://clic.baradero.gob.ar/wp-content/uploads/elementor/css/global.css" />
  <style is:global>
    /* Estilos personalizados para el formulario */
    .wpcf7 {
      max-width: 600px;
      margin: 40px auto;
      padding: 30px;
      background-color: #ffffff;
      border-radius: 10px;
      box-shadow: 0 5px 25px rgba(0, 0, 0, 0.1);
      font-family: 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
    }
    .wpcf7 p {
      margin-bottom: 20px;
      display: flex;
      flex-direction: column;
    }
    .wpcf7 label {
      font-weight: 600;
      color: #555;
      margin-bottom: 8px;
      font-size: 16px;
    }
    .wpcf7-form-control:not(.wpcf7-submit) {
      width: 100%;
      padding: 12px 15px;
      border: 1px solid #ddd;
      border-radius: 8px;
      font-size: 16px;
      color: #333;
      transition: border-color 0.3s, box-shadow 0.3s;
    }
    .wpcf7-form-control:not(.wpcf7-submit):focus {
      border-color: #007bff;
      box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.25);
      outline: none;
    }
    .wpcf7-submit {
      width: 100%;
      padding: 15px;
      background-color: #007bff;
      color: white;
      font-size: 18px;
      font-weight: bold;
      border: none;
      border-radius: 8px;
      cursor: pointer;
      transition: background-color 0.3s, transform 0.2s;
    }
    .wpcf7-submit:hover {
      background-color: #0056b3;
      transform: translateY(-2px);
    }
    .wpcf7-submit:active {
      background-color: #004085;
      transform: translateY(0);
    }
    .wpcf7-response-output {
      margin-top: 20px;
      padding: 15px;
      border-radius: 8px;
      text-align: center;
      font-weight: bold;
      font-size: 16px;
    }
    .wpcf7-mail-sent-ok {
      background-color: #e6f7e6;
      color: #1a7e1a;
      border-color: #1a7e1a;
    }
    .wpcf7-validation-errors, .wpcf7-mail-sent-ng {
      background-color: #f7e6e6;
      color: #7e1a1a;
      border-color: #7e1a1a;
    }
  </style>
</head>

<Layout>
  <main>
    <h1 set:html={title} />
    <Fragment set:html={content} />
    <div class="wpcf7">
      <form class="wpcf7-form">
        <p><label>Nombres<br><input type="text" name="nombres" class="wpcf7-form-control" required></label></p>
        <p><label>Apellidos<br><input type="text" name="apellidos" class="wpcf7-form-control" required></label></p>
        <p><label>Sexo<br>
          <select name="sexo" class="wpcf7-form-control" required>
            <option value="">Selecciona una opción</option>
            <option value="Masculino">Masculino</option>
            <option value="Femenino">Femenino</option>
            <option value="Otro">Otro</option>
          </select>
        </label></p>
        <p><label>DNI<br><input type="text" name="dni" class="wpcf7-form-control" required></label></p>
        <p><label>Fecha de nacimiento<br><input type="date" name="fecha-nacimiento" class="wpcf7-form-control" required></label></p>
        <p><label>Lugar de nacimiento<br><input type="text" name="lugar-nacimiento" class="wpcf7-form-control"></label></p>
        <p><label>Estado civil<br><input type="text" name="estado-civil" class="wpcf7-form-control"></label></p>
        <p><label>Hijos (cantidad)<br>
          <input type="number" name="hijos" class="wpcf7-form-control" min="0" step="1" inputmode="numeric">
        </label></p> 
        <p><label>Familiares a cargo<br>
          <input type="number" name="familiares-a-cargo" class="wpcf7-form-control" min="0" step="1" inputmode="numeric">
        </label></p>
        <p><label>Domicilio<br><input type="text" name="domicilio" class="wpcf7-form-control"></label></p>
        <p><label>N°<br><input type="text" name="numero-domicilio" class="wpcf7-form-control"></label></p>
        <p><label>Piso<br><input type="text" name="piso" class="wpcf7-form-control"></label></p>
        <p><label>Depto<br><input type="text" name="depto" class="wpcf7-form-control"></label></p>
        <p><label>Localidad/Barrio<br><input type="text" name="localidad" class="wpcf7-form-control"></label></p>
        <p><label>Partido<br><input type="text" name="partido" class="wpcf7-form-control"></label></p>
        <p><label>Teléfono<br>
          <input type="tel" name="telefono" class="wpcf7-form-control" inputmode="tel" pattern="[0-9+\s\-()]{6,20}" placeholder="Ej: 3411234567 o +5493411234567">
        </label></p>

        <p><label>Teléfono alternativo<br>
          <input type="tel" name="telefono-alternativo" class="wpcf7-form-control" inputmode="tel" pattern="[0-9+\s\-()]{6,20}">
        </label></p>
        <p><label>Correo electrónico<br>
          <input type="email" name="correo-electronico" class="wpcf7-form-control" required placeholder="usuario@ejemplo.com">
        </label></p>
        <p><label>Título nivel medio o polimodal<br><input type="text" name="titulo-medio" class="wpcf7-form-control"></label></p>
        <p><label>Año de egreso<br><input type="text" name="anio-egreso-medio" class="wpcf7-form-control"></label></p>
        <p><label>Escuela<br><input type="text" name="escuela" class="wpcf7-form-control"></label></p>
        <p><label>Distrito<br><input type="text" name="distrito" class="wpcf7-form-control"></label></p>
        <p><label>Otros estudios<br><input type="text" name="otros-estudios-1" class="wpcf7-form-control"></label></p>
        <p><label>Año de egreso<br><input type="text" name="anio-egreso-otros-1" class="wpcf7-form-control"></label></p>
        <p><label>Segundo título<br><input type="text" name="otros-estudios-2" class="wpcf7-form-control"></label></p>
        <p><label>Año de egreso del segundo título<br><input type="text" name="anio-egreso-otros-2" class="wpcf7-form-control"></label></p>
        <p><label>¿Trabaja?<br>
          <input type="radio" name="trabaja" value="Sí" required> Sí
          <input type="radio" name="trabaja" value="No"> No
        </label></p>
        <p><label>Establecimiento en el que trabaja<br><input type="text" name="establecimiento-trabajo" class="wpcf7-form-control"></label></p>
        <p><label>Teléfono laboral<br>
          <input type="tel" name="telefono-laboral" class="wpcf7-form-control" inputmode="tel" pattern="[0-9+\s\-()]{6,20}">
        </label></p>
        <p><label>Horario habitual<br><input type="text" name="horario-laboral" class="wpcf7-form-control"></label></p>
        <p><label>Obra social<br><input type="text" name="obra-social" class="wpcf7-form-control"></label></p>
        <p><label>N°<br><input type="text" name="numero-obra-social" class="wpcf7-form-control"></label></p>

        <fieldset class="hidden-fields-container" style="display:none;">
          <input type="hidden" name="_wpcf7" value="303" />
          <input type="hidden" name="_wpcf7_version" value="6.1.1" />
          <input type="hidden" name="_wpcf7_locale" value="es_AR" />
          <input type="hidden" name="_wpcf7_unit_tag" value="wpcf7-f303-p248-o1" />
          <input type="hidden" name="_wpcf7_container_post" value="248" />
          <input type="hidden" name="_wpcf7_posted_data_hash" value="" />
        </fieldset>

        <p>
          <input type="submit" value="Enviar" class="wpcf7-submit">
        </p>
      </form>
      <div id="response-message" class="wpcf7-response-output" style="display:none;"></div>
    </div>
  </main>
</Layout>


<script>
  (function () {
    const form = document.querySelector('.wpcf7-form');
    const responseDiv = document.getElementById('response-message');

    if (!form) {
      console.error('Form .wpcf7-form no encontrado.');
      return;
    }

    const clearFieldErrors = () => {
      form.querySelectorAll('.wpcf7-not-valid').forEach(el => el.classList.remove('wpcf7-not-valid'));
      form.querySelectorAll('.wpcf7-not-valid-tip').forEach(el => el.remove());
      responseDiv.style.display = 'none';
      responseDiv.textContent = '';
      responseDiv.className = 'wpcf7-response-output';
    };

    const addFieldError = (fieldName, message) => {
      const candidates = [
        `[name="${fieldName}"]`,
        `[name="${fieldName.replace(/-/g, '_')}"]`,
        `[name="${fieldName.replace(/_/g, '-')}"]`,
        `[name="your-${fieldName}"]`,
        `[name="${fieldName}[]"]`
      ];
      let field = null;
      for (const sel of candidates) {
        field = form.querySelector(sel);
        if (field) break;
      }
      if (!field) {
        const p = document.createElement('div');
        p.className = 'wpcf7-not-valid-tip';
        p.textContent = `${fieldName}: ${message}`;
        responseDiv.appendChild(p);
        return;
      }
      field.classList.add('wpcf7-not-valid');
      const tip = document.createElement('div');
      tip.className = 'wpcf7-not-valid-tip';
      tip.textContent = message;
      if (field.nextSibling) {
        field.parentNode.insertBefore(tip, field.nextSibling);
      } else {
        field.parentNode.appendChild(tip);
      }
    };

    // Validaciones clientes sencillas
    const clientValidate = (formData) => {
      const errors = [];
      // correo-electronico
      const email = formData.get('correo-electronico') || '';
      if (email && !/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email)) {
        errors.push({ field: 'correo-electronico', message: 'Formato de correo inválido.' });
      }
      // números
      ['hijos', 'familiares-a-cargo'].forEach(name => {
        const v = formData.get(name);
        if (v !== null && v !== '' && isNaN(Number(v))) {
          errors.push({ field: name, message: 'Ingresá un número válido.' });
        }
      });
      // teléfonos (si hay valor, validar mínimo de dígitos)
      ['telefono', 'telefono-alternativo', 'telefono-laboral'].forEach(name => {
        const v = (formData.get(name) || '').toString().trim();
        if (v !== '') {
          // quitar espacios y símbolos y contar dígitos
          const digits = v.replace(/[^0-9]/g, '');
          if (digits.length < 6) {
            errors.push({ field: name, message: 'Ingresá un número de teléfono válido (más dígitos).' });
          }
        }
      });
      return errors;
    };

    form.addEventListener('submit', async (event) => {
      event.preventDefault();
      clearFieldErrors();

      const formData = new FormData(form);

      // --- NO sustituir vacíos por 'N/A' ---
      // Si realmente necesitás un placeholder para campos vacíos, hacer eso en servidor.

      // Añadimos los hidden obligatorios
      formData.set('_wpcf7', '303');
      formData.set('_wpcf7_version', '6.1.1');
      formData.set('_wpcf7_locale', 'es_AR');
      formData.set('_wpcf7_unit_tag', 'wpcf7-f303-p248-o1');
      formData.set('_wpcf7_container_post', '248');
      formData.set('_wpcf7_posted_data_hash', '');

      // validación cliente
      const clientErrors = clientValidate(formData);
      if (clientErrors.length > 0) {
        responseDiv.style.display = 'block';
        responseDiv.className = 'wpcf7-response-output wpcf7-validation-errors';
        responseDiv.textContent = 'Corrige los errores marcados en el formulario.';
        clientErrors.forEach(err => addFieldError(err.field, err.message));
        return;
      }

      const formId = "303";
      const apiUrl = `https://clic.baradero.gob.ar/wp-json/contact-form-7/v1/contact-forms/${formId}/feedback`;

      try {
        for (let [k, v] of formData.entries()) console.log(`${k}: ${v}`);

        const response = await fetch(apiUrl, {
          method: 'POST',
          body: formData
        });

        const result = await response.json().catch(() => null);
        console.log('CF7 response raw:', response);
        console.log('CF7 response json:', result);

        responseDiv.style.display = 'block';

        if (response.ok && result && result.status === 'mail_sent') {
          responseDiv.className = 'wpcf7-response-output wpcf7-mail-sent-ok';
          responseDiv.textContent = '¡Gracias por inscribirte! Tu inscripción ha sido enviada con éxito.';
          form.reset();
          return;
        }

        // manejo de validaciones desde CF7
        if (result && result.invalid_fields && result.invalid_fields.length) {
          responseDiv.className = 'wpcf7-response-output wpcf7-validation-errors';
          responseDiv.textContent = 'Hay errores en algunos campos. Revisa los mensajes junto a cada campo.';
          for (const obj of result.invalid_fields) {
            addFieldError(obj.field, obj.message);
          }
          return;
        }

        if (result && result.message) {
          responseDiv.className = 'wpcf7-response-output wpcf7-validation-errors';
          responseDiv.textContent = result.message;
          return;
        }

        // fallback
        responseDiv.className = 'wpcf7-response-output wpcf7-mail-sent-ng';
        responseDiv.textContent = 'Uno o más campos tienen un error. Por favor, revisá e intentá de nuevo.';
        if (result) {
          const pre = document.createElement('pre');
          pre.style.maxHeight = '200px';
          pre.style.overflow = 'auto';
          pre.textContent = JSON.stringify(result, null, 2);
          responseDiv.appendChild(pre);
        }

      } catch (error) {
        console.error('Error de red:', error);
        responseDiv.className = 'wpcf7-response-output wpcf7-mail-sent-ng';
        responseDiv.textContent = 'Hubo un problema de conexión. Por favor, verifica tu internet e inténtalo de nuevo.';
      }
    });
  })();
</script>
